                                                            PROJECT DOCUMENTATION

1. TITLE

CI/CD Pipeline for Zomato Application using Node.js, Docker, Kubernetes(kops cluster), and GitHub Actions .

2. INTRODUCTION

Modern application development demands automated pipelines to ensure continuous integration and delivery. This project demonstrates how to containerize a 
Node.js Zomato application and automate its build-test-deploy lifecycle using GitHub Actions for CI/CD, Docker for containerize the application and 
Deployment is handled by using kubernetes on kops cluster .

3. ABSTRACT

This project demonstrates the implementation of a CI/CD pipeline for the Zomato application using Docker containers, GitHub Actions, and Kubernetes(Kops) Pods.
The pipeline automatically builds Docker images, to build the code, runs unit tests, pushes images to Docker Hub, and deploys them using kubernetes(Kops). In
this project a zomato application am deploying in two ways and the first way is docker-compose am creating docker containers to run the application and the 
second one is kubernetes (kops cluster) am creating Pods to run the application. The pipeline is ensures consistent, automated and making it suitable for local
environments and learning devops practices.

4. TOOLS AND TECHNOLOGIES USED 

Git, GitHub, Node.js Jenkins, GitHub Actins for CI/CD Automation, Docker, Docker-Compose, DockerHub, Kubernetes(Kops Cluster), Kubectl .

5. STEPS INVOLVED IN BUILDING THE PROJECT

#STEP-1 : First of all taking a New Server with Server configurations are server_name : project, AMI : Amazon linux kernel 5.10, Instance_type : t2.medium,
           Key_Pair : sai-kp, Security_Group : All-Traffic, EBS : 20GIB . After connecting to Server with SSH .

#STEP-2 : Now changing to the Root User by using command 

          COMMAND : sudo -i - To change the Root User .

 Now To Set-Up the Tools Git, Docker, Docker-Compose, Jenkins, Kubernetes(Kops) by using Commands .

 - COMMAND : yum install git -y - To install the git .

 - COMMAND : yum install java-17-amazon-corretto -y - To install the java-17 version because of jenkins dependency java .

 - After collecting Two repos from jenkins.io .

 - COMMAND : yum install jenkins -y - To install the jenkins .

 - COMMAND : systemctl start jenkins - To start the jenkins service .

 - COMMAND : systemctl status jenkins - To check the status of the jenkins .

 Docker Commands :

 - COMMAND : yum install docker -y - To install the docker .

 - COMMAND : systemctl start docker - To start the docker .

 - COMMAND : systemctl status docker - To check the status of the docker .

 Docker-Compose :

 - To set-up the docker-compose by collecting commands from the browser .

#STEP-3 :

- Now to Access the Jenkins dashboard with public-ip:8080 . 8080 is a Jenkins Port Number . After am creating a New Job in Jenkins and the Job_Name is Deployment.



 











